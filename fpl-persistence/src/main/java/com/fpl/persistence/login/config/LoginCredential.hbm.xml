<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class
        name="com.fpl.login.entity.LoginCredential" table="FPL_MA_LOGIN_CREDENTIAL" lazy="false">
           <id name="id" type="java.lang.Long" column="LC_ID">   
              <generator class="native">
<!--               		<param name="sequence">FPL_SQ_LOGIN_CREDENTIAL_ID</param> -->
              </generator>
           </id>
           <property name="secretQuestionId"   		column="LC_SQ_ID"  					type="java.lang.Long"/>
           <property name="userTypeId"   			column="LC_UT_ID"  					type="java.lang.Long"/>
           <property name="password"   				column="LC_PASSWORD"  				type="java.lang.String"/>
           <property name="date"   					column="LC_DATE"  					type="java.util.Date"/>
           <property name="mailId"   				column="LC_MAIL_ID"  				type="java.lang.String"/>
           <property name="alternateMailId"   		column="LC_ALTERNATE_MAILL_ID"  	type="java.lang.String"/>
           <property name="mobileNumber"   			column="LC_MOBILE_NUMBER"  			type="java.lang.Long"/>
           <property name="secretAnswer"   			column="LC_QUESTION_ANSWER"  		type="java.lang.String"/>
           <property name="country"   				column="LC_COUNTRY"  				type="java.lang.String"/>
           <many-to-one name="user" class="com.fpl.login.entity.User" lazy="false" insert="false" update="false">
              <column name="LC_UT_ID" precision="9" scale="0" />
           </many-to-one>
           <many-to-one name="secretQuestion" class="com.fpl.login.entity.SecretQuestion" lazy="false" insert="false" update="false">
              <column name="LC_SQ_ID" precision="9" scale="0" />
           </many-to-one>
           <!-- <one-to-one name="loginSupport"  class="com.fpl.login.entity.LoginSupport" lazy="false" cascade="none">
           </one-to-one>
           <one-to-one name="loginRecovery"  class="com.fpl.login.entity.LoginRecovery" lazy="false"  cascade="none">
           </one-to-one> -->
        </class>
</hibernate-mapping>